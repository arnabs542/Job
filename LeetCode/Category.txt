--------------------
Dynamic Programming
--------------------
* String Matching
  - 10. Regular Expression Matching
        # 2D DP
  - 44. Wildcard Matching
        # 2D DP
  - 72. Edit Distance (template for 2d DP)
        # 2D DP
  - 115. Distinct Subsequences
        # 2D DP, DFS

* n个ballon从1个开始循环，2个，最后n个
  - 312. Burst Balloons

* Decode
  - 91. Decode Ways
        # 1D

* 纯DP
  - 96. Unique Binary Search Trees

* array中新的value跟过去的value有关
  - 264. Ugly Number II
    # Array, 类似DP

--------------------
Binary Search
--------------------
* compare mid with left||right||mid-1||mid+1

* 终极老怪
  - 33. Search in Rotated Sorted Array
        # Binary Search

* search in rotated sorted array
  - 33. Search in Rotated Sorted Array
        # Binary Search, Array
  - 153. Find Minimum in Rotated Sorted Array
        # Binary Search, Array

* 理解l<r 还是l<=r, l=mid+1 r=mid 边界条件
  - 162. Find Peak Element
        - compare mid with mid + 1
        # Binary Search

* compare left tree height and right tree height
  - 222. Count Complete Tree Nodes
        # Binary Search, Tree, Complete Tree

* Matain longest increasing subsequence
  - 300. Longest Increasing Subsequence
  - 334. Increasing Triplet Subsequence

* Matain list of char sequence index list for each char in String t
  - 392. Is Subsequence

--------------------
Tree
--------------------
- 297. Serialize and Deserialize Binary Tree
    # BFS, Preorder Traversal, Tree

- 298. Binary Tree Longest Consecutive Sequence
    # PostOrder, Tree

- 270. Closest Binary Search Tree Value

--------------------
Array
--------------------
* Map array value to array index
  - 41. First Missing Positive
        # Array, Index

* Intervals. Split to start and end array and sort them.
  - 56. Merge Intervals
  - 253. Meeting Rooms II
    # Array, Sort

* Matain max, min, res
  - 152. Maximum Product Subarray

* 记住行的kill和列的kill直到碰到墙 then reset
  - 361. Bomb Enemy

- 289. Game of Life


--------------------
Stack
--------------------
* calculate expression
  - 150. Evaluate Reverse Polish Notation

* maintain number stack and res stack and current res
  - 394. Decode String


--------------------
String
--------------------
* Split by Regx and compare
  - 165. Compare Version Numbers

* add cols and check if cut string instead of add string and compare cols
  - 418. Sentence Screen Fitting

- 43. Multiply Strings
    # String

- 249. Group Shifted Strings
    # String, HashMap


--------------------
Two Pointers
--------------------
* Sliding window
  - 438. Find All Anagrams in a String
  - 76 Minimum Window Substring

- 42. Trapping Rain Water
        # Two Pointers

- 340. Longest Substring with At Most K Distinct Characters
        # Two Pointers, HashMap


--------------------
Graph
--------------------
* convert letter sequence to directed graph and use topological sort
  - Alien Dictionary
    # Topological Sort, DFS, Graph, Character order, directed graph


--------------------
BFS
--------------------
* Shortest Path
  - 127. Word Ladder

--------------------
DFS
--------------------
* Combine DFS and Tree Generation
    - 95. Unique Binary Search Trees II
        # DFS, Tree, Postorder

* Calculate minnum # to sum each num in list to 0
  - 465. Optimal Account Balancing

* Maze, ball moving with direction
  - 490. The Maze
  - 505. The Maze II
    # BFS, Shortest Path



- 37. Sudoku Solver

- 286. Walls and Gates

--------------------
Union Find
--------------------
* track connected component
  - 305. Number of Islands II

* Convert equation to graph, use Map to matain parent relation
  - 399. Evaluate Division


--------------------
HashSet
--------------------
* find consecutive number by going up and down
  - 128. Longest Consecutive Sequence
      # HashSet

* encode to category
  - 36. Valid Sudoku
    # HashSet

--------------------
HashMap
--------------------
- 205. Isomorphic Strings


--------------------
Priority Queue
--------------------
* Use minHeap and maxHeap to maintain median
  - 295. Find Median from Data Stream

- 218. The Skyline Problem

----------------------------------
Fenwick Tree / Binary Indexed Tree
----------------------------------
* get sum of prefix VS segment tree get sum of given range
  - 315. Count of Smaller Numbers After Self

* 2D Binary Indexed Tree
  - 308. Range Sum Query 2D - Mutable

--------------------
Design
--------------------
* Buffer
  - 359. Logger Rate Limiter
        # Design, Scale, Buffer, HashSet
  - 362. Design Hit Counter
        # Design, Scale, Buffer
  - 346. Moving Average from Data Stream
        # Design, Queue, Buffer

- 146. LRU Cache
    # Double LinkedList, HashMap



