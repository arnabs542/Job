--------------------
String
--------------------
* Split by Regx and compare
  - 165. Compare Version Numbers

* add cols and check if cut string instead of add string and compare cols
  - 418. Sentence Screen Fitting

* palindromic
  - 647 Palindromic Substrings

* Convert integer to english words
  - 273. Integer to English Words
    # Recursion, Math

* Buffer
  - 157. Read N Characters Given Read4
  - 158. Read N Characters Given Read4 II - Call multiple times

* Roman to integer
  - 13. Roman to Integer
  - 12. Integer to Roman

- 161. One Edit Distance
    # String

- 43. Multiply Strings
    # String

- 38. Count and Say
    # String

- 249. Group Shifted Strings
    # String, HashMap

- 527. Word Abbreviation
    # String

--------------------
LinkedList
--------------------
* Doubly Linkedlist, dummy head, tail node
  - 146 LRU(Least Recently Used) Cache
    # Doubly LinkedList, HashMap

* Reverse linkedlist, slow/fast pointer
  - 234 Palindrome Linked List
  - 160. Intersection of Two Linked Lists
  - 142 Linked List Cycle II

- 2. Add Two Numbers


--------------------
Array
--------------------
* Map array value to array index
  - 41. First Missing Positive
        # Array, Index
  - 448 Find All Numbers Disappeared in an Array

* Intervals. Split to start and end array and sort them.
  - 56. Merge Intervals
  - 253. Meeting Rooms II
    # Array, Sort

* insert interval
  - 57. Insert Interval

* Matain max, min, res
  - 152. Maximum Product Subarray

* 记住行的kill和列的kill直到碰到墙 then reset
  - 361. Bomb Enemy

* sum up to current index, and matain sum map
  - 560. Subarray Sum Equals K
  - 325. Maximum Size Subarray Sum Equals k

* matain remainder index map instead of sum index map
  - 523. Continuous Subarray Sum

* matain max array and compare with index
  - 769. Max Chunks To Make Sorted

* 3 for loop, fixed 2 rows and loop cols
  - 750. Number Of Corner Rectangles
    # 2D Array, Math

* int[256] matains previous visited index
  - 3 Longest Substring Without Repeating Characters
    # Two Pointers

* 左到右依次少乘本身，然后右到左乘以right（nums右到左product）
  - 238 Product of Array Except Self

* Rotate array, left to top, bottom to left, ...top to right
  - 48 Rotate Image

* search in sorted rows and cols array
  - 240 Search a 2D Matrix II

* matain largest sum index in array
  - 689. Maximum Sum of 3 Non-Overlapping Subarrays
    # Array, DP

- 289. Game of Life
- 670. Maximum Swap

--------------------
Stack
--------------------
* calculate expression
  - 150. Evaluate Reverse Polish Notation

* maintain number stack and res stack and current res
  - 394. Decode String

* find next greater element in arr
  - 496. Next Greater Element I
  - 503. Next Greater Element II

* parentheses
  - 20 Valid Parentheses

* parentheses, push index into stack
  - 32 Longest Valid Parentheses

* parentheses, remove invalid parentheses
  - 301 Remove Invalid Parentheses
      # Backtracking/DFS, Two Pointers

* Matain increasing order index in stack
  - 84 Largest Rectangle in Histogram

* Decode String with 2 stacks and one current res
  - 394. Decode String

* Calculate time for process
  - 636. Exclusive Time of Functions

--------------------
Tree
--------------------
* recursion on 2 nodes and compare
  - 101 Symmetric Tree

* matain max sum for each path using recursion
  - 124 Binary Tree Maximum Path Sum

* lowest common ancestor
  - 236 Lowest Common Ancestor of a Binary Tree

* construct tree from Preorder and Inorder Traversal
  - 105 Construct Binary Tree from Preorder and Inorder Traversal

* level traversal, preorder
  - 102 Binary Tree Level Order Traversal

* flatten tree, right -> left
  - 114. Flatten Binary Tree to Linked List
      # PostOrder, Tree

* Tree inorder iterative traversal with stack
  - 94. Binary Tree Inorder Traversal
      # Inorder Traversal, Stack
  - 173. Binary Search Tree Iterator
      # Stack

* DP in tree
  - 337. House Robber III
      # Tree, DP

* path sum from any node
  - 437. Path Sum III
      # PreOrder on sum, PostOrder on res, Tree, DFS

* Inorder traversal and compare with previous node
  - 98. Validate Binary Search Tree

* vertical order traversal using BFS
  - 314. Binary Tree Vertical Order Traversal
      # Tree, BFS

- 285. Inorder Successor in BST
      # Tree, Successor

- 297. Serialize and Deserialize Binary Tree
    # BFS, Preorder Traversal, Tree

- 298. Binary Tree Longest Consecutive Sequence
    # PostOrder, Tree

- 270. Closest Binary Search Tree Value

* Postorder traversal and serialize subtree to string
  - 652. Find Duplicate Subtrees

--------------------
Trie/Prefix Tree
--------------------
* add, find word in trie, "." means any character
  - 211. Add and Search Word - Data structure design

- 208. Implement Trie (Prefix Tree)


--------------------
HashSet
--------------------
* find consecutive number by going up and down
  - 128. Longest Consecutive Sequence
      # HashSet

* encode to category
  - 36. Valid Sudoku
    # HashSet


--------------------
HashMap
--------------------
- 205. Isomorphic Strings
- 1. Two Sums


--------------------
Two Pointers
--------------------
* Sliding window
  - 438. Find All Anagrams in a String
  - 76 Minimum Window Substring

* Matain index queue of decending num.
  Use queue to operate on both sides rather than stack
  - 239. Sliding Window Maximum

* matain index stack of incresing/decreasing num
  - 581. Shortest Unsorted Continuous Subarray
      # Monotonic, Stack

* two pointers, water
  - 11 Container With Most Water
  - 42. Trapping Rain Water
        # Two Pointers

* 3 partition
  - 75 Sort Colors
  - 15. 3Sum
    # Two Pointers, Sort, Edge Case

* palindrome: while l<r, compare and l--, r--
  - 125. Valid Palindrome
  - 680. Valid Palindrome II

125. Valid Palindrome
    # Two Pointers

- 340. Longest Substring with At Most K Distinct Characters
    # Two Pointers, HashMap

--------------------
Binary Search
--------------------
* cut1 and cut2= length/2-cut1, l1, r1, l2, r2
  - 4 Median of Two Sorted Arrays

* compare mid with left||right||mid-1||mid+1

* fnid duplicates in unsorted array
  - 287 Find the Duplicate Number
    # Binary Search, unsorted array

* find leftmost and rightmost
  - 34 Search for a Range
      # Binary Search

* find bad version
  - 278. First Bad Version

* Longest Increasing subsequence
  - 300. Longest Increasing Subsequence
      # Binary Search, patience sort

* 终极老怪
  - 33. Search in Rotated Sorted Array
        # Binary Search

* search in rotated sorted array
  - 33. Search in Rotated Sorted Array
        # Binary Search, Array
  - 153. Find Minimum in Rotated Sorted Array
        # Binary Search, Array

* 理解l<r 还是l<=r, l=mid+1 r=mid 边界条件
  - 162. Find Peak Element
        - compare mid with mid + 1
        # Binary Search

* compare left tree height and right tree height
  - 222. Count Complete Tree Nodes
        # Binary Search, Tree, Complete Tree

* Matain longest increasing subsequence
  - 300. Longest Increasing Subsequence
  - 334. Increasing Triplet Subsequence

* Matain list of char sequence index list for each char in String t
  - 392. Is Subsequence

* find single element
  - 540. Single Element in a Sorted Array


--------------------
Binary Search Tree
--------------------
* Matain (start, end, overlap) time using binary search tree.
  - 731. My Calendar II


--------------------
Graph
--------------------
* convert letter sequence to directed graph and use topological sort
  - Alien Dictionary
    # Topological Sort, DFS, Graph, Character order, directed graph


--------------------
BFS
--------------------
* Shortest Path
  - 127. Word Ladder

* Shortest Path, encode int[][] to string and keep Set<String> visited
  - 773. Sliding Puzzle
  - 787. Cheapest Flights Within K Stops
  - 815. Bus Routes

* color node
  - 785. Is Graph Bipartite
    # Graph, BFS

--------------------
DFS
--------------------
* Combine DFS and Tree Generation
    - 95. Unique Binary Search Trees II
        # DFS, Tree, Postorder

* Cycle detection, directed graph
  - 207. Course Schedule
      # DFS, Topological Sort, Graph, Adjacent List, Cycle Detection, Back Edge

* Calculate minnum # to sum each num in list to 0
  - 465. Optimal Account Balancing

* Maze, ball moving with direction
  - 490. The Maze
  - 505. The Maze II
    # BFS, Shortest Path

* Construct all strings
  - 753. Cracking the Safe

** integer arr to expression
  - 282. Expression Add Operators

* undirected graph clone, self cycle
  - 133. Clone Graph

- 341. Flatten Nested List Iterator
- 37. Sudoku Solver
- 286. Walls and Gates
- 529. Minesweeper
- 802. Find Eventual Safe States

--------------------
Union Find
--------------------
* track connected component
  - 305. Number of Islands II

* Convert equation to graph, use Map to matain parent relation
  - 399. Evaluate Division

* detect cycle and multiple parents in directed graph
  - 684. Redundant Connection
  - 685. Redundant Connection II

* interesting couple swap
  - 765. Couples Holding Hands

* String union find
  - 737. Sentence Similarity II

--------------------
Connected Component
--------------------
- 721. Accounts Merge
    # BFS/DFS, Union Find, Graph, Connected component


--------------------
Priority Queue
--------------------
* Use minHeap and maxHeap to maintain median
  - 295. Find Median from Data Stream

- 218. The Skyline Problem


----------------------------------
Fenwick Tree / Binary Indexed Tree
----------------------------------
* get sum of prefix VS segment tree get sum of given range
  - 315. Count of Smaller Numbers After Self

* 2D Binary Indexed Tree
  - 308. Range Sum Query 2D - Mutable


--------------------
Sort
--------------------
* LinkedList merge sort
  - 148 Sort List
  - 23 Merge k Sorted Lists

* counting sort, sort on anagrams
  - 49 Group Anagrams

* bucket sort, maximax frequence is fixed
  - 347 Top K Frequent Elements

* sort int[][] arr by sort 2 dimension
  - 406 Queue Reconstruction by Height

* Quick sort, kth largest element
  - 215 Kth Largest Element in an Array

--------------------
Backtracking
--------------------
* number of left parentheses is always >= right
  - 22 Generate Parentheses

- 46 Permutations
- 17 Letter Combinations of a Phone Number
- 39. Combination Sum
- 78 Subsets


--------------------
Greedy
--------------------
- 621. Task Scheduler
    # Greedy, Math

* Matain pre and # of consecutive sequence at pre with length 1, 2, 3
    - 659. Split Array into Consecutive Subsequences

--------------------
Bit Mnaipulation
--------------------
* x ^ y, x&1, x >>= 1
  - 136 Single Number
  - 461 Hamming Distance

* 统计1，0个数后相乘 for 32 digit
  - 477. Total Hamming Distance

* i&(i - 1)， 这个本来是用来判断一个数是否是2的指数的快捷方法，比如8，二进制位1000, 那么8&(8-1)为0，只要为0就是2的指数
  - 338 Counting Bits

--------------------
Dynamic Programming
--------------------
* 1D
  - 198 House Robber

* 2 for loops
  - 139 Word Break
      # 1D DP
  - 279 Perfect Squares
      # 1D DP
  - 322. Coin Change
      # 1D DP

* Unique binary search tree, 2 for loops
  - 96 Unique Binary Search Trees
    # 1D DP

* simple path sum
  - 64 Minimum Path Sum
      # 2D DP

* String Matching
  - 10. Regular Expression Matching
        # 2D DP
  - 44. Wildcard Matching
        # 2D DP
  - 72. Edit Distance (template for 2d DP)
        # 2D DP
  - 115. Distinct Subsequences
        # 2D DP, DFS

* palindromic, 2 for loops, s.charAt(i) == s.charAt(j) && dp[i+1][j-1]
  - 5 Longest Palindromic Substring
    # 2D DP

* buy and sell stock
  - 309. Best Time to Buy and Sell Stock with Cooldown
      # 1D DP
  - 122. Best Time to Buy and Sell Stock II
      # Greedy
  - 123. Best Time to Buy and Sell Stock III
      # 1D DP

* maximax square
  - 221. Maximal Square
      # 2D DP

* Matain startIndex instead of boolean dp[][]
  - 727. Minimum Window Subsequence
        # 2D DP

* use sum range as cols, elements as rows
  - 494. Target Sum
        # 2D

* n个ballon从1个开始循环，2个，最后n个
  - 312. Burst Balloons

* Recursion, memorization, 2D
  - 486. Predict the Winner

* Decode
  - 91. Decode Ways
        # 1D

* create student attendance with A, L, P
  - 552. Student Attendance Record II
        # 1D

* 纯DP
  - 96. Unique Binary Search Trees

* array中新的value跟过去的value有关
  - 264. Ugly Number II
    # Array, 类似DP

--------------------
SQL
--------------------
- 602. Friend Requests II: Who Has the Most Friends

--------------------
Design
--------------------
* Buffer
  - 359. Logger Rate Limiter
        # Design, Scale, Buffer, HashSet
  - 362. Design Hit Counter
        # Design, Scale, Buffer
  - 346. Moving Average from Data Stream
        # Design, Queue, Buffer

- 146. LRU Cache
    # Double LinkedList, HashMap



